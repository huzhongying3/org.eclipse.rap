<project name="Build specific targets and properties" default="noDefault">

	<!-- ===================================================================== -->
	<!-- Run a given ${target} on all elements being built -->
	<!-- Add on <ant> task for each top level element being built. -->
	<!-- ===================================================================== -->
	<property name="allElementsFile" value="${builder}/allElements.xml" />
	<import file="${allElementsFile}" />
	<target name="allElements">
		<antcall target="allElementsDelegator" />
	</target>

	<!-- ===================================================================== -->
	<!-- ===================================================================== -->
	<target name="getBaseComponents" depends="checkLocalBase" unless="skipBase">
		<get src="${eclipseBaseURL}" dest="${buildDirectory}/../temp-base.zip" />
		<unzip dest="${base}" overwrite="true" src="${buildDirectory}/../temp-base.zip" />
	</target>

	<target name="checkLocalBase">
		<available file="${base}" property="skipBase" />
	</target>

	<!-- ===================================================================== -->
	<!-- Check out map files from correct repository -->
	<!-- Replace values for mapsCheckoutTag as desired. -->
	<!-- ===================================================================== -->
	<target name="getMapFiles" depends="checkLocalMaps" unless="skipMaps">
		<property name="mapsCheckoutTag" value="HEAD" />
		<cvs cvsRoot="${mapsRepo}" package="${mapsRoot}" dest="${buildDirectory}/maps" tag="${mapsCheckoutTag}" />
	</target>

	<target name="checkLocalMaps">
		<available property="skipMaps" file="${buildDirectory}/maps" />
	</target>

	<target name="tagMapFiles" if="tagMaps">
		<cvs dest="${buildDirectory}/maps/${mapsRoot}" command="tag ${mapsTagTag}" />
	</target>

	<!-- ===================================================================== -->

	<target name="clean" unless="noclean">
		<antcall target="allElements">
			<param name="target" value="cleanElement" />
		</antcall>
	</target>

	<target name="gatherLogs">
		<mkdir dir="${buildDirectory}/${buildLabel}/compilelogs" />
		<antcall target="allElements">
			<param name="target" value="gatherLogs" />
		</antcall>
		<unzip dest="${buildDirectory}/${buildLabel}/compilelogs" overwrite="true">
			<fileset dir="${buildDirectory}/features">
				<include name="**/*.log.zip" />
			</fileset>
		</unzip>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before setup -->
	<!-- ===================================================================== -->
	<target name="preSetup">
		<!-- tidy up before build to clean broken build -->
		<antcall target="tidyup" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after setup but before starting the build proper -->
	<!-- ===================================================================== -->
	<target name="postSetup">
		<antcall target="getBaseComponents" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before fetching the build elements -->
	<!-- ===================================================================== -->
	<target name="preFetch">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after fetching the build elements -->
	<!-- ===================================================================== -->
	<target name="postFetch">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before generating the build scripts. -->
	<!-- ===================================================================== -->
	<target name="preGenerate">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after generating the build scripts. -->
	<!-- ===================================================================== -->
	<target name="postGenerate">
		<antcall target="clean" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="preProcess">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="postProcess">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running assemble. -->
	<!-- ===================================================================== -->
	<target name="preAssemble">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after  running assemble. -->
	<!-- ===================================================================== -->
	<target name="postAssemble">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running package. -->
	<!-- ===================================================================== -->
	<target name="prePackage">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after  running package. -->
	<!-- ===================================================================== -->
	<target name="postPackage">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the build is done. -->
	<!-- ===================================================================== -->
	<target name="postBuild">
		<antcall target="gatherLogs" />

		<antcall target="assembleTarget" />

		<antcall target="test" />

		<antcall target="publish" />

		<antcall target="tidyup" />
	</target>

	<target name="assembleTarget">
		<property name="targetLocation" value="${buildDirectory}/${buildLabel}/target" />
		<property name="targetLocation33" value="${buildDirectory}/${buildLabel}/target33" />
		<property name="rap-feature" value="${buildDirectory}/${buildLabel}/org.eclipse.rap-${buildId}.zip" />
		<property name="rap-sdk-feature" value="${buildDirectory}/${buildLabel}/org.eclipse.rap.sdk-${buildId}.zip" />

		<unzip src="${rap-feature}" dest="${targetLocation}" />
		<unzip src="${rap-sdk-feature}" dest="${targetLocation}" />

		<copy file="${targetLocation}/eclipse/plugins/org.eclipse.rap.w4t_${targetVersion}.${buildId}.jar" tofile="${buildDirectory}/plugins/org.eclipse.rap.w4t.test/org.eclipse.rap.w4t_${targetVersion}.${buildId}.jar" />
		<delete>
			<fileset dir="${targetLocation}/eclipse/plugins">
				<include name="org.eclipse.rap.w4t_*" />
			</fileset>
		</delete>

		<!-- duplicate 3.4 target for 3.3 -->
		<copydir dest="${targetLocation33}" src="${targetLocation}">
		</copydir>

		<!--
		<delete file="${rap-feature}"></delete>
		<delete file="${rap-sdk-feature}"></delete>
		-->

		<!-- 3.4 base -->
		<fileset dir="${baseLocation}/plugins" id="34base">
			<include name="org.apache.commons.logging_*" />
			<include name="org.apache.commons.logging.source_*" />
			<include name="org.eclipse.core.commands_*" />
			<include name="org.eclipse.core.commands.source_*" />
			<include name="org.eclipse.core.contenttype_*" />
			<include name="org.eclipse.core.contenttype.source_*" />
			<include name="org.eclipse.core.expressions_*" />
			<include name="org.eclipse.core.expressions.source_*" />
			<include name="org.eclipse.core.jobs_*" />
			<include name="org.eclipse.core.jobs.source_*" />
			<include name="org.eclipse.core.runtime_*" />
			<include name="org.eclipse.core.runtime.source_*" />
      <include name="org.eclipse.equinox.app_*" />
      <include name="org.eclipse.equinox.app.source_*" />
			<include name="org.eclipse.equinox.common_*" />
			<include name="org.eclipse.equinox.common.source_*" />
			<include name="org.eclipse.equinox.http.jetty_*" />
			<include name="org.eclipse.equinox.http.jetty.source_*" />
			<include name="org.eclipse.equinox.http.registry_*" />
			<include name="org.eclipse.equinox.http.registry.source_*" />
			<include name="org.eclipse.equinox.http.servlet_*" />
			<include name="org.eclipse.equinox.http.servlet.source_*" />
			<include name="org.eclipse.equinox.preferences_*" />
			<include name="org.eclipse.equinox.preferences.source_*" />
			<include name="org.eclipse.equinox.registry_*" />
			<include name="org.eclipse.equinox.registry.source_*" />
			<include name="org.eclipse.osgi.services_*" />
			<include name="org.eclipse.osgi.services.source_*" />
			<include name="org.eclipse.osgi_*" />
			<include name="org.eclipse.osgi.source_*" />
			<include name="org.mortbay.jetty_*" />
			<include name="org.mortbay.jetty.source_*/" />
			<include name="org.junit_3*" />
			<include name="org.junit.source_3*/" />
			<include name="org.eclipse.jdt.junit.runtime*" />
		</fileset>
		
		<!-- 3.3 base -->
		<fileset dir="${baseLocation_33}/plugins" id="33base">
			<include name="org.eclipse.core.commands_*" />
			<include name="org.eclipse.core.contenttype_*" />
			<include name="org.eclipse.core.expressions_*" />
			<include name="org.eclipse.core.jobs_*" />
			<include name="org.eclipse.core.runtime_*" />
			<include name="org.eclipse.equinox.app_*" />
			<include name="org.eclipse.equinox.common_*" />
			<include name="org.eclipse.equinox.preferences_*" />
			<include name="org.eclipse.equinox.registry_*" />
			<include name="org.eclipse.osgi.services_*" />
			<include name="org.eclipse.osgi_*" />
			<include name="org.junit_3*" />
			<include name="org.junit.source_3*/" />
			<include name="org.eclipse.jdt.junit.runtime*" />
			<!-- include sources -->
			<include name="org.eclipse.rcp.source_*/" />
			<include name="javax.servlet.source_*/" />
			<include name="org.apache.commons.logging.source_*/" />
			<include name="org.mortbay.jetty.source_*/" />
			<!-- exclude unneeded sources -->
			<exclude name="org.eclipse.rcp.source_*/org.eclipse.core.runtime.compatibility.auth_*" />
			<exclude name="org.eclipse.rcp.source_*/org.eclipse.core.databinding_*" />
			<exclude name="org.eclipse.rcp.source_*/org.eclipse.core.databinding.beans_*" />
			<exclude name="org.eclipse.rcp.source_*/org.eclipse.jface.databinding_*" />
			<exclude name="org.eclipse.rcp.source_*/org.eclipse.help_*" />
			<exclude name="org.eclipse.rcp.source_*/org.eclipse.jface_*" />
			<exclude name="org.eclipse.rcp.source_*/org.eclipse.ui.workbench_*" />
			<exclude name="org.eclipse.rcp.source_*/org.eclipse.ui_*" />
			<exclude name="org.eclipse.rcp.source_*/org.eclipse.update.configurator_*" />
		</fileset>

		<!-- copy all the needed plugins + source -->
		<copy todir="${targetLocation}/eclipse/plugins">
			<fileset refid="34base" />
		</copy>

		<copy todir="${targetLocation33}/eclipse/plugins">
			<fileset refid="33base" />
		</copy>

		<!-- zip 3.4 target together -->
		<zip destfile="${buildDirectory}/${buildLabel}/rap-${targetVersion}-${buildType}-target-3.4-${buildId}.zip">
			<fileset dir="${targetLocation}">
			</fileset>
		</zip>

		<!-- zip 3.3 target together -->
		<zip destfile="${buildDirectory}/${buildLabel}/rap-${targetVersion}-${buildType}-target-3.3-${buildId}.zip">
			<fileset dir="${targetLocation33}">
			</fileset>
		</zip>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do to test the build results -->
	<!-- ===================================================================== -->
	<target name="test">
		<property name="src.tests" value="${buildDirectory}/plugins/org.eclipse.rap.rwt.test/" />
		<property name="build.tests" value="${buildDirectory}/plugins/org.eclipse.rap.rwt.test/@dot" />
		<property name="reports.tests" value="${buildDirectory}/tests" />
		<mkdir dir="${reports.tests}" />
		<path id="cp">
			<pathelement location="${build.tests}" />
			<!-- work in progress
			<pathelement location="${src.tests}/src/servicehandler.xml" />
			<pathelement location="${src.tests}/src/resources/w4t_fixture.xml" />
			<pathelement location="${src.tests}/src/resources/w4t_partial.xml" />
			-->
			<!--<pathelement location="${src.tests}" /> -->
			<pathelement path="${buildDirectory}/${buildLabel}/target/eclipse/plugins/org.eclipse.rap.rwt_${targetVersion}.${buildId}.jar" />
			<pathelement path="${buildDirectory}/plugins/org.eclipse.rap.w4t.test/org.eclipse.rap.w4t_${targetVersion}.${buildId}.jar" />
			<pathelement path="${buildDirectory}/plugins/org.eclipse.rap.w4t.test/lib/resource_manager_test.jar" />
			<pathelement path="${buildDirectory}/plugins/org.eclipse.rap.w4t.test/@dot" />
			<pathelement path="${buildDirectory}/${buildLabel}/target/eclipse/plugins/javax.servlet_2.4.0.v200803061910.jar" />
			<pathelement path="${java.class.path}" />
			<pathelement path="${baseLocation}/plugins/org.junit_3.8.2.v200711021030/junit.jar" />
		</path>
		<!-- run rwt tests -->
		<junit printsummary="yes" haltonfailure="no" fork="yes" forkmode="once">
			<classpath refid="cp" />

			<formatter type="xml" />

			<batchtest fork="no" todir="${reports.tests}">
				<fileset dir="${build.tests}">
					<include name="**/*Test*.class" />
					<exclude name="**/RWTFixture.class" />
					<exclude name="**/RWTTestSuite.class" />
					<exclude name="**/*$*.class" />
					<exclude name="**/TestAdaptable.class" />
					<exclude name="**/TestAdapterFactory.class" />
				</fileset>

			</batchtest>
		</junit>
		<path id="cp2">
			<pathelement location="${buildDirectory}/plugins/org.eclipse.rap.w4t.test/@dot" />
			<!--<pathelement location="${src.tests}" /> -->
			<!--<pathelement path="${buildDirectory}/${buildLabel}/target/eclipse/plugins/org.eclipse.rap.w4t_${targetVersion}.${buildId}.jar" />-->
			<pathelement path="${buildDirectory}/plugins/org.eclipse.rap.w4t.test/org.eclipse.rap.w4t_${targetVersion}.${buildId}.jar" />
			<pathelement path="${buildDirectory}/${buildLabel}/target/eclipse/plugins/org.eclipse.rap.rwt_${targetVersion}.${buildId}.jar" />
			<pathelement path="${buildDirectory}/plugins/org.eclipse.rap.w4t.test/@dot" />
			<pathelement path="${buildDirectory}/plugins/org.eclipse.rap.w4t.test/lib/resource_manager_test.jar" />
			<pathelement path="${buildDirectory}/plugins/org.eclipse.rap.w4t.test/lib/js.jar" />
			<pathelement path="${buildDirectory}/${buildLabel}/target/eclipse/plugins/javax.servlet_2.4.0.v200803061910.jar" />
			<pathelement path="${java.class.path}" />
			<pathelement path="${baseLocation}/plugins/org.junit_3.8.2.v200711021030/junit.jar" />
			<pathelement path="${baseLocation}/plugins/org.eclipse.rap.w4t/WEB-INF/lib/commons-fileupload-1.0.jar" />
		</path>
		<!-- run w4t tests -->
		<junit printsummary="yes" haltonfailure="no" fork="yes" forkmode="once">
			<classpath refid="cp2" />

			<formatter type="xml" />

			<batchtest fork="no" todir="${reports.tests}">
				<fileset dir="${buildDirectory}/plugins/org.eclipse.rap.w4t.test/@dot">
					<include name="**/*_Test*.class" />

					<exclude name="**/AllTests_Suite.class" />
					<exclude name="**/PerformanceAndMemoryTest.class" />
					<exclude name="**/*Renderer*.class" />
					<exclude name="**/*$*.class" />
				</fileset>

			</batchtest>
		</junit>

		<!-- create a report -->
		<mkdir dir="${buildDirectory}/${buildLabel}/reports" />
		<mkdir dir="${buildDirectory}/${buildLabel}/reports/html" />
		<junitreport todir="${buildDirectory}/${buildLabel}/reports">
			<fileset dir="${reports.tests}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${buildDirectory}/${buildLabel}/reports/html" />
		</junitreport>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do to publish the build results -->
	<!-- ===================================================================== -->
	<target name="publish">
		<property name="buildOuputDirectory" value="${outputDirectory}/${buildType}-${buildId}" />
		<property name="fBuildLocation" value="${buildDirectory}/${buildLabel}/" />
		<property name="reports.tests" value="${buildDirectory}/tests" />

		<mkdir dir="${ouputDirectory}" />
		<mkdir dir="${buildOuputDirectory}" />

		<!-- copy targets -->
		<copy todir="${buildOuputDirectory}">
			<fileset dir="${fBuildLocation}">
				<include name="rap-${targetVersion}-${buildType}-target-*" />
			</fileset>
		</copy>
		<!-- copy test results -->
		<copydir dest="${buildOuputDirectory}/tests" src="${fBuildLocation}/reports/html">
		</copydir>

		<!-- copy raw test results -->
		<copydir dest="${buildOuputDirectory}/testsraw" src="${reports.tests}">
		</copydir>
	</target>

	<target name="tidyup">
		<delete defaultexcludes="false" includeEmptyDirs="true" dir="${buildDirectory}" />
	</target>

	<!-- ===================================================================== -->
	<!-- Default target                                                        -->
	<!-- ===================================================================== -->
	<target name="noDefault">
		<echo message="You must specify a target when invoking this file" />
	</target>

</project>
