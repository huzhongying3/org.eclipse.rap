--- qx-build/source/class/qx/html/Scroll.js	10 Dec 2008 16:57:52 -0000	1.1
+++ qx-build/source/class/qx/html/Scroll.js	24 Jun 2009 10:18:08 -0000
@@ -75,6 +75,52 @@
       }
 
       return sum;
+    },
+
+
+    /**
+     * Disables browser-native scrolling
+     *
+     * @type static
+     * @param el {Element} html-element
+     * @return {void}
+     */
+    disableScrolling : function(el) 
+    {
+      this.enableScrolling(el);
+      el.scrollLeft = 0;
+      el.scrollTop = 0;
+      qx.html.EventRegistration.addEventListener(el, "scroll", this._onscroll);
+    },
+
+
+    /**
+     * Re-enables browser-native scrolling
+     *
+     * @type static
+     * @param el {Element} html-element
+     * @return {void}
+     */
+    enableScrolling : function(el) 
+    {;
+      qx.html.EventRegistration.removeEventListener(el, "scroll", this._onscroll);
+    },
+
+
+    /**
+     * Handler for the scroll-event
+     *
+     * @type static
+     * @param ev {event} scroll-event
+     * @return {void}
+     */    
+    _onscroll : function(ev) 
+    {
+      var el = ev.target || ev.srcElement;
+      if(ev.scrollLeft != 0 || ev.scrollTop != 0) {
+        el.scrollLeft = 0;
+        el.scrollTop = 0;
+      }
     }
   }
 });

--- qx-build/source/class/qx/ui/core/Widget.js	10 Dec 2008 16:57:54 -0000	1.1
+++ qx-build/source/class/qx/ui/core/Widget.js	24 Jun 2009 10:18:11 -0000
@@ -1210,7 +1210,66 @@
       document.body.removeChild(t);
     },
 
-    _idCounter : 0
+    _idCounter : 0,
+
+
+
+
+
+
+    /*
+    ---------------------------------------------------------------------------
+      SCROLL-BLOCKER
+    ---------------------------------------------------------------------------
+    */
+    
+    /**
+     * Disables browser-native scrolling
+     *
+     * @type static
+     * @param widget {widget} widget to diable scrolling for
+     * @return {void}
+     */
+    disableScrolling : function(widget)
+    {
+      var el = widget._getTargetNode();
+      if(el) {
+        qx.html.Scroll.disableScrolling(el);
+      } else {
+        widget.addEventListener("appear", this._blockScrollingOnAppear, this);
+      }
+    },
+    
+    /**
+     * Re-enables browser-native scrolling
+     *
+     * @type static
+     * @param widget {widget} widget to re-enable scrolling for
+     * @return {void}
+     */
+    enableScrolling : function(widget)
+    {
+      var el = widget._getTargetNode();
+      if(el) {
+        qx.html.Scroll.enableScrolling(el);
+      } else {
+        widget.removeEventListener("appear", this._blockScrollingOnAppear, this);
+      }     
+    },
+    
+    /**
+     * Handler needed for the delayed node-creation
+     *
+     * @type static
+     * @param ev {Event} The "appear"-event
+     * @return {void}
+     */
+    _blockScrollingOnAppear : function(ev)
+    {
+      var widget = ev.getTarget();
+      widget.removeEventListener("appear", this._blockScrollingOnAppear, this);
+      this.disableScrolling(widget);
+    }
 
   },
 
