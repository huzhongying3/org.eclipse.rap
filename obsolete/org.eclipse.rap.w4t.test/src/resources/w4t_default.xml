<?xml version="1.0" encoding="UTF-8"?>
<w4t:application xmlns:w4t="http://w4toolkit.com/" 
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://w4toolkit.com/ w4t.xsd">
	<initialisation>
		<!--    the fully qualified class name of the WebFormular
	        	that is displayed when the web application starts. 
	        //-->
		<startUpForm>     		  
		        com.w4t.administration.Startup
		</startUpForm>
		<!--    specifies the implementation class that manages the lifecycle
            of each request.
	        //-->
		<lifecycle>com.w4t.engine.lifecycle.standard.LifeCycle_Standard</lifecycle>
		<!--    the fully qualified class name of a WebForm that
	        	displays Exceptions that broke the control flow within
	        	the web application.
	        	If user-defined, this must be a subclass of 
	        	com.w4t.WebForm and must implement the 
	        	com.w4t.WebErrorForm interface.
	        //-->
		<errorPage>
		        com.w4t.administration.DefaultErrorForm
		</errorPage>
	  <!--    the fully qualified class name of a WebForm that is used as
            entry point for an web-application providing administration
            information about the main application.
	        //-->
	  <administrationStartupForm>
            com.w4t.administration.Startup
	  </administrationStartupForm>      
		<!--    the fully qualified class name of a WebForm that
	        	displays messages that were created within the web
	        	application.
	        	If user-defined, this must be a subclass of 
	        	com.w4t.WebForm and must implement the 
	        	com.w4t.MessageForm interface.
	        //-->
		<messagePage>
		        com.w4t.administration.DefaultMessageForm
		</messagePage>
		<!--  the path to a writeable directory, used for temporary
                      files.
	        //-->
		<workDirectory>WEB-INF/classes/</workDirectory>
		<!--    maximum time till the closing of a WebForm on the 
		        client is recognized at server side.
                        Time interval, in ms.
	        //-->
		<closingTimeout>3600000</closingTimeout>
		<!--    time interval between scans for closed WebForm at 
		        the server side. This value should not be greater than 
		        half of the closingTimeout value.
                        Time interval, in ms.
	        //-->
		<skimmerFrequency>60000</skimmerFrequency>
		<!--    whether the w4t administration pages are accessible
                	via the admin.html page. (Shoud be 'false' for productive 
                	versions.)
                        Can be 'true' or 'false'.
	        //-->
		<directMonitoringAccess>true</directMonitoringAccess>
        <!--    whether the html output of the web appliction is sent
                gzipped to browsers that support gzipped network 
               	communication. (Should be 'true' for productive versions
               	to save network traffic and shorten loading time.)
                Can be 'true' or 'false'.
	        //-->
		<compression>true</compression>
		<!--    whether the server-side processing time of the html
                page is displayed (on the bottom of the page). This
                may be useful for application tuning. (Will be 'false'
                for productive versions.)
                Can be 'true' or 'false'.
	        //-->
		<processTime>false</processTime>
		<!--    whether special submitter images are used for 
                browsers that have javascript disabled.
                Possible values are:
                - none
                  If set to 'None', a standard submitter image 
                  is rendered in addition to the labels on link 
                  buttons, tree nodes etc.;                 	
                - create 
                  If set to 'Create', a special image is created 
                  automatically with the appropriate text and colors.
                  Images created only once and buffered on harddisk
                  in the webapplications image directory.
                  Setting this to 'create' requires an available X 
                  server on Unixes, however.
                - use 
                  If set to 'Use' earlier generated images are used
                  but no new images are generated. If no image is 
                  available from disk, a standard submitter image 
                  is rendered in addition to the labels on link 
                  buttons, tree nodes etc.;                 	
                Can be 'None', 'Create' or 'Use'.
	        //-->
	      <noscriptSubmitters>Create</noscriptSubmitters>
		    <!-- whether static resources like javascript-libraries, images, 
             css-files etc. which are available on the applications 
             classpath are copied to disk and delivered as static files by 
             a web-server or delivered directly by the servlet engine.
             Should be 'deliverFromDisk' in most cases.
             Can be 'deliverFromDisk' or 'deliverByServlet'.
	    	//-->
        <resources>deliverFromDisk</resources>
        <!--  this is a special option for certain environments, where
              the gc algorithm comes too late to unload classes.
              If set to a number > 0, this will enforce a gc after the
              specified number of sessions has been invalidated.
        //-->
        <maxSessionUnboundToForceGC>0</maxSessionUnboundToForceGC>
        <!--  W4 Toolkit supports i18n by accepting values like
              property://someKey@some.package.SomePropertiesFile
              which are resolved on rendering, so that the specified
              property is displayed in the HTML output that the user
              sees.
              This attribute specifies the behaviour of the resolver
              when the specifed resource could not be found as expected.
              (For development, it may be convenient to set this to 
              "Fail", whereas probably in productive environments
              the most sensible setting would be "Empty" here.)
              Possible values are:
              - "Fail"     behaves like a failed assertion, that is 
                           a runtime exception is fired.
              - "Empty"    does nothing and renders an empty String 
                           into the component's output.
              - "Explicit" does nothing and renders the property URI
                           literally into the component's output.
              Can be "Fail", "Empty" or "Explicit"
        //-->
        <handleMissingI18NResource>Empty</handleMissingI18NResource>
	</initialisation>
			  <fileUpload>
			      <!-- Sets the maximum allowed upload size in bytes or -1 for 
			           no maximum.
			      //-->
					<maxUploadSize>4194304</maxUploadSize>
					  <!-- Sets the threshold of the allowed upload size in bytes which is
					       kept in memory.
					  //-->
		      <maxMemorySize>524288</maxMemorySize>
			  </fileUpload>
</w4t:application>
